//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TableTennis
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GenesysProjectEntities : DbContext
    {
        public GenesysProjectEntities()
            : base("name=GenesysProjectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<SlotChart> SlotCharts { get; set; }
        public virtual DbSet<SlotsAlloc> SlotsAllocs { get; set; }
        public virtual DbSet<TennisTable> TennisTables { get; set; }
        public virtual DbSet<HistoryRecord> HistoryRecords { get; set; }
        public virtual DbSet<SlotStatu> SlotStatus { get; set; }
        public virtual DbSet<vw_Employee> vw_Employee { get; set; }
        public virtual DbSet<vw_TennisTable> vw_TennisTable { get; set; }
        public virtual DbSet<vw_Login> vw_Login { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
    
        public virtual ObjectResult<string> usp_BookSlot(string slotID, string emailID)
        {
            var slotIDParameter = slotID != null ?
                new ObjectParameter("SlotID", slotID) :
                new ObjectParameter("SlotID", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_BookSlot", slotIDParameter, emailIDParameter);
        }
    
        public virtual ObjectResult<string> usp_CancelBookSlot(string slotID, string emailID)
        {
            var slotIDParameter = slotID != null ?
                new ObjectParameter("SlotID", slotID) :
                new ObjectParameter("SlotID", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_CancelBookSlot", slotIDParameter, emailIDParameter);
        }
    
        public virtual ObjectResult<usp_GetAllEmployee_Result> usp_GetAllEmployee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllEmployee_Result>("usp_GetAllEmployee");
        }
    
        public virtual ObjectResult<usp_GetAvailability_Result> usp_GetAvailability(Nullable<System.DateTime> date, string emailID)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAvailability_Result>("usp_GetAvailability", dateParameter, emailIDParameter);
        }
    
        public virtual ObjectResult<usp_GetEmployee_Result> usp_GetEmployee(Nullable<long> emailID)
        {
            var emailIDParameter = emailID.HasValue ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetEmployee_Result>("usp_GetEmployee", emailIDParameter);
        }
    
        public virtual ObjectResult<string> usp_LoginValidate(string emailID, string empPass)
        {
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var empPassParameter = empPass != null ?
                new ObjectParameter("EmpPass", empPass) :
                new ObjectParameter("EmpPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_LoginValidate", emailIDParameter, empPassParameter);
        }
    
        public virtual ObjectResult<string> usp_RegEmployee(Nullable<int> empID, string empName, string emailID, string empPass, Nullable<bool> isOrganiser)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var empPassParameter = empPass != null ?
                new ObjectParameter("EmpPass", empPass) :
                new ObjectParameter("EmpPass", typeof(string));
    
            var isOrganiserParameter = isOrganiser.HasValue ?
                new ObjectParameter("IsOrganiser", isOrganiser) :
                new ObjectParameter("IsOrganiser", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_RegEmployee", empIDParameter, empNameParameter, emailIDParameter, empPassParameter, isOrganiserParameter);
        }
    
        public virtual ObjectResult<usp_RegEmployee_Result> usp_RegEmployee_True(Nullable<int> empID, string empName, string emailID, string empPass, Nullable<bool> isOrganiser)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var empPassParameter = empPass != null ?
                new ObjectParameter("EmpPass", empPass) :
                new ObjectParameter("EmpPass", typeof(string));
    
            var isOrganiserParameter = isOrganiser.HasValue ?
                new ObjectParameter("IsOrganiser", isOrganiser) :
                new ObjectParameter("IsOrganiser", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RegEmployee_Result>("usp_RegEmployee_True", empIDParameter, empNameParameter, emailIDParameter, empPassParameter, isOrganiserParameter);
        }
    
        public virtual ObjectResult<usp_LoginValidate_true_Result> usp_LoginValidate_true(string emailID, string empPass)
        {
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var empPassParameter = empPass != null ?
                new ObjectParameter("EmpPass", empPass) :
                new ObjectParameter("EmpPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LoginValidate_true_Result>("usp_LoginValidate_true", emailIDParameter, empPassParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> usp_GetBooking(string emailID)
        {
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("usp_GetBooking", emailIDParameter);
        }
    
        public virtual ObjectResult<usp_GetBookedHistoryList_Result> usp_GetBookedHistoryList(string emailID)
        {
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetBookedHistoryList_Result>("usp_GetBookedHistoryList", emailIDParameter);
        }
    
        public virtual ObjectResult<string> usp_UpdateEmployee(Nullable<int> empID, string empName, string emailID, string empPass, Nullable<bool> isOrganiser)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var empPassParameter = empPass != null ?
                new ObjectParameter("EmpPass", empPass) :
                new ObjectParameter("EmpPass", typeof(string));
    
            var isOrganiserParameter = isOrganiser.HasValue ?
                new ObjectParameter("IsOrganiser", isOrganiser) :
                new ObjectParameter("IsOrganiser", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_UpdateEmployee", empIDParameter, empNameParameter, emailIDParameter, empPassParameter, isOrganiserParameter);
        }
    
        public virtual ObjectResult<string> usp_EmailValidate(string emailID)
        {
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_EmailValidate", emailIDParameter);
        }
    
        public virtual int usp_UpdateSlot(string bookingSlotID, string cancellationSlotID, string emailID)
        {
            var bookingSlotIDParameter = bookingSlotID != null ?
                new ObjectParameter("BookingSlotID", bookingSlotID) :
                new ObjectParameter("BookingSlotID", typeof(string));
    
            var cancellationSlotIDParameter = cancellationSlotID != null ?
                new ObjectParameter("CancellationSlotID", cancellationSlotID) :
                new ObjectParameter("CancellationSlotID", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateSlot", bookingSlotIDParameter, cancellationSlotIDParameter, emailIDParameter);
        }
    
        public virtual ObjectResult<string> usp_UpdateSlotResult(string bookingSlotID, string cancellationSlotID, string emailID)
        {
            var bookingSlotIDParameter = bookingSlotID != null ?
                new ObjectParameter("BookingSlotID", bookingSlotID) :
                new ObjectParameter("BookingSlotID", typeof(string));
    
            var cancellationSlotIDParameter = cancellationSlotID != null ?
                new ObjectParameter("CancellationSlotID", cancellationSlotID) :
                new ObjectParameter("CancellationSlotID", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_UpdateSlotResult", bookingSlotIDParameter, cancellationSlotIDParameter, emailIDParameter);
        }
    
        public virtual int usp_SetFeedback(string emailID, string feedbackType, string comments)
        {
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var feedbackTypeParameter = feedbackType != null ?
                new ObjectParameter("FeedbackType", feedbackType) :
                new ObjectParameter("FeedbackType", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SetFeedback", emailIDParameter, feedbackTypeParameter, commentsParameter);
        }
    }
}
